shared:
  ci_success: &ci_success
    - "check-success=Run unit tests"
    - "check-success=Run lint"
    - "check-success=Run stylelint"
    - "check-success=Build"
    - or:
        - and:
            - head=main
            - "check-success=netlify/dainty-arithmetic-94f385/deploy-preview"
        - and:
            - head!=main
  queue_conditions: &queue_conditions
    - -label=Hold merge
    - -label=Addressing issues
    - -conflict
    - "#approved-reviews-by>=1"
  default_queue_conditions: &default_queue_conditions
    - and: *ci_success
    - and: *queue_conditions
    - author!=renovate[bot]
  renovate_queue_conditions: &renovate_queue_conditions
    - and: *ci_success
    - and: *queue_conditions
    - author=renovate[bot]
  release_queue_conditions: &release_queue_conditions
    - head=changeset-release/main
    - "#approved-reviews-by>=1"
  team_inkbeard: &team_inkbeard
    - files~=^apps/inkbeard/
  team_ui_library: &team_ui_library
    - files~=^apps/ui-library/
  team_budget_it: &team_budget_it
    - files~=^apps/budget-it/
  team_general_ui: &team_general_ui
    - files~=^packages/ui-theme/
    - files~=^packages/ui-vue/
    - files~=^packages/ui/
    - files~=^packages/eslint-config/
    - files~=^packages/stylelint-config/
    - files~=^packages/typescript-config/

partition_rules:
  - name: default
    fallback_partition: true

  - name: inkbeard
    conditions:
      - and: *team_inkbeard

  - name: examples
    conditions:
      - and: *team_ui_library

  - name: budget-it
    conditions:
      - and: *team_budget_it

  - name: general ui
    conditions:
      - and: *team_general_ui

merge_queue:
  max_parallel_checks: 3

queue_rules:
  - name: release
    queue_conditions:
      - and: *release_queue_conditions
  - name: default
    batch_size: 3
    queue_conditions:
      - and: *default_queue_conditions
  - name: renovate
    batch_size: 10
    batch_max_wait_time: 30 min
    queue_conditions:
      - and: *renovate_queue_conditions

pull_request_rules:
  # PR approval rules
  # - name: Automatically approve Renovate PRs
  #   conditions:
  #     - author=renovate[bot]
  #     - and: *ci_success
  #     - or:
  #       - dependabot-update-type=version-update:semver-minor
  #       - dependabot-update-type=version-update:semver-patch
  #   actions:
  #     review:
  #       type: APPROVE
  - name: Add bot approval for PRs ready to merge
    conditions:
      - or:
          - and:
              - head!=changeset-release/main
              - and: *ci_success
          - head=changeset-release/main
      - label=Ready to merge
    actions:
      review:
        type: APPROVE
  # PR queue rules
  - name: Add PR to default queue
    conditions:
      - and: *default_queue_conditions
    actions:
      queue:
        name: default
  - name: Add PR to renovate queue
    conditions:
      - and: *renovate_queue_conditions
    actions:
      queue:
        name: renovate
  - name: Add PR to release queue
    conditions:
      - and: *release_queue_conditions
    actions:
      queue:
        name: release
  # PR test rules
  - name: Test for conflicts
    conditions:
      - -closed
      - conflict
    actions:
      label:
        toggle:
          - "failure: conflict"
  # PR label rules
  - name: Label Mergify Stacks PRs
    description: Pull requests that are part of a Mergify stack should be labeled as such
    conditions:
      # Only trigger if the PR is part of a stack
      - "commits[0].commit_message ~= (?m)Change-Id:"
    actions:
      label:
        toggle:
          - PR stack
  - name: Label first PR of Mergify Stacks PRs
    description: The first PR of a Mergify stack should be labeled as such
    conditions:
      # Only trigger if the PR is part of a stack
      - "commits[0].commit_message ~= (?m)Change-Id:"
      # Ignore PR targeting their children
      - -base ~= ^mergify_cli/
    actions:
      label:
        toggle:
          - top of the stack
  - name: toggle generator label
    conditions:
      - -closed
      - files~=turbo/generators/
    actions:
      label:
        toggle:
          - "feature: generator"
  - name: toggle unit test failure label
    conditions:
      - -closed
      - "check-failure=Run unit tests"
    actions:
      label:
        toggle:
          - "failure: unit tests"
  - name: toggle codeQl failure label
    conditions:
      - -closed
      - "check-failure=CodeQL"
    actions:
      label:
        toggle:
          - "failure: CodeQL scan"
  - name: toggle lint failure label
    conditions:
      - -closed
      - "check-failure=Run lint"
    actions:
      label:
        toggle:
          - "failure: lint"
  - name: toggle stylelint failure label
    conditions:
      - -closed
      - "check-failure=Run stylelint"
    actions:
      label:
        toggle:
          - "failure: stylelint"
  - name: toggle build failure label
    conditions:
      - -closed
      - "check-failure=Build"
    actions:
      label:
        toggle:
          - "failure: build"
  - name: Test PR title for Jira IDs
    conditions:
      - -closed
      - author!=mergify[bot]
      - "check-failure=Title has jira ticket id"
    actions:
      label:
        toggle:
          - "failure: title"
  # Partition rules
  # Would ideally have this as dynamic, but Mergify doesn't support the `partition-queue-name` attribute at the moment.
  - name: inkbeard partition workflow
    conditions:
      - and: *ci_success
      - and: *team_inkbeard
    actions:
      github_actions:
        workflow:
          dispatch:
            - workflow: partition.yml
              inputs:
                project_name: inkbeard
  - name: examples partition workflow
    conditions:
      - and: *ci_success
      - and: *team_ui_library
    actions:
      github_actions:
        workflow:
          dispatch:
            - workflow: partition.yml
              inputs:
                project_name: examples
  - name: budget-it partition workflow
    conditions:
      - and: *ci_success
      - and: *team_budget_it
    actions:
      github_actions:
        workflow:
          dispatch:
            - workflow: partition.yml
              inputs:
                project_name: budget-it
  - name: general ui partition workflow
    conditions:
      - and: *ci_success
      - and: *team_general_ui
    actions:
      github_actions:
        workflow:
          dispatch:
            - workflow: partition.yml
              inputs:
                project_name: general ui
priority_rules:
  - name: priority for queue `release`
    conditions:
      - queue-name=release
    priority: 2500
  - name: priority for queue `default`
    conditions:
      - queue-name=default
    priority: 2250
